# Generated by Django 5.1.6 on 2025-03-26 08:20

import django.db.models.deletion
import lessons.utils
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('users', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(help_text='Текст вопроса', verbose_name='текст вопроса')),
                ('image', models.ImageField(blank=True, help_text='Картинка для вопроса', null=True, upload_to=lessons.utils.path_maker_question, verbose_name='картинка')),
            ],
            options={
                'verbose_name': 'Question',
                'verbose_name_plural': 'Questions',
            },
        ),
        migrations.CreateModel(
            name='TestBlock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': 'TestBlock',
                'verbose_name_plural': 'TestBlocks',
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Название курса', max_length=256, verbose_name='Название')),
                ('description', models.TextField(help_text='Описание курса', verbose_name='Описание')),
                ('beginer', models.BooleanField(default=False, help_text='Курс для начинающих', verbose_name='Начинающий')),
                ('create_date', models.DateTimeField(auto_now_add=True, help_text='Дата создания курса', verbose_name='Дата создания')),
                ('update_date', models.DateTimeField(auto_now=True, help_text='Дата обновления курса', verbose_name='Дата обновления')),
                ('image', models.ImageField(null=True, upload_to=lessons.utils.path_maker_course, verbose_name='Превью')),
                ('experiences', models.ManyToManyField(help_text='На какие стажи расчитан курс', to='users.workexperience', verbose_name='Стаж')),
                ('profession', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='users.profession', verbose_name='профессия')),
            ],
            options={
                'verbose_name': 'Course',
                'verbose_name_plural': 'Courses',
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('done_lessons', models.SmallIntegerField(default=0, verbose_name='Количество выполненых уроков')),
                ('start_date', models.DateTimeField(default=None, help_text='Дата начала ивента, нужно для Celery что бы в рассписании поставить дату выдачи ивента', null=True, verbose_name='дата начала ивента')),
                ('end_date', models.DateTimeField(default=None, help_text='Дедлайн ивента, еслидедлайна нет тогда бессрочно', null=True, verbose_name='дедлайн')),
                ('favorite', models.BooleanField(default=False, help_text='Указатель является ли данныйивент избранным', verbose_name='Избранный ивент')),
                ('status', models.CharField(choices=[('done', 'Успешно'), ('process', 'В процессе'), ('failed', 'Провалено'), ('expected', 'Ожидает начало')], default='process', help_text='Текущий статус данного ивента', null=True, verbose_name='статус ивента')),
                ('course', models.ForeignKey(help_text='Курс который обворачиваетсяивент', on_delete=django.db.models.deletion.CASCADE, to='lessons.course', verbose_name='курс')),
                ('user', models.ForeignKey(help_text='Пользователь которому будет назначен ивент', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='пользователь')),
            ],
            options={
                'verbose_name': 'Event',
                'verbose_name_plural': 'Events',
            },
        ),
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(help_text='Текст ответа', verbose_name='текст ответа')),
                ('correct', models.BooleanField(help_text='Корректность данного ответа', verbose_name='корректность')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='lessons.question', verbose_name='ответ')),
            ],
            options={
                'verbose_name': 'Answer',
                'verbose_name_plural': 'Answers',
            },
        ),
        migrations.AddField(
            model_name='question',
            name='test_block',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='lessons.testblock', verbose_name='тестовый блок'),
        ),
    ]
