# Generated by Django 5.1.6 on 2025-03-20 16:44

import lessons.utils
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Answer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "text",
                    models.TextField(
                        help_text="Текст ответа", verbose_name="текст ответа"
                    ),
                ),
                (
                    "correct",
                    models.BooleanField(
                        help_text="Корректность данного ответа",
                        verbose_name="корректность",
                    ),
                ),
            ],
            options={
                "verbose_name": "Answer",
                "verbose_name_plural": "Answers",
            },
        ),
        migrations.CreateModel(
            name="Course",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Название курса",
                        max_length=256,
                        verbose_name="Название",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        help_text="Описание курса", verbose_name="Описание"
                    ),
                ),
                (
                    "beginer",
                    models.BooleanField(
                        default=False,
                        help_text="Курс для начинающих",
                        verbose_name="Начинающий",
                    ),
                ),
                (
                    "create_date",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="Дата создания курса",
                        verbose_name="Дата создания",
                    ),
                ),
                (
                    "update_date",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="Дата обновления курса",
                        verbose_name="Дата обновления",
                    ),
                ),
                (
                    "image",
                    models.ImageField(
                        null=True,
                        upload_to=lessons.utils.path_maker_course,
                        verbose_name="Превью",
                    ),
                ),
            ],
            options={
                "verbose_name": "Course",
                "verbose_name_plural": "Courses",
            },
        ),
        migrations.CreateModel(
            name="Event",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "done_lessons",
                    models.SmallIntegerField(
                        default=0, verbose_name="Количество выполненых уроков"
                    ),
                ),
                (
                    "start_date",
                    models.DateTimeField(
                        default=None,
                        help_text="Дата начала ивента, нужно для Celery что бы в рассписании поставить дату выдачи ивента",
                        null=True,
                        verbose_name="дата начала ивента",
                    ),
                ),
                (
                    "end_date",
                    models.DateTimeField(
                        default=None,
                        help_text="Дедлайн ивента, еслидедлайна нет тогда бессрочно",
                        null=True,
                        verbose_name="дедлайн",
                    ),
                ),
                (
                    "favorite",
                    models.BooleanField(
                        default=False,
                        help_text="Указатель является ли данныйивент избранным",
                        verbose_name="Избранный ивент",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("done", "Успешно"),
                            ("process", "В процессе"),
                            ("failed", "Провалено"),
                            ("expected", "Ожидает начало"),
                        ],
                        default="expected",
                        help_text="Текущий статус данного ивента",
                        null=True,
                        verbose_name="статус ивента",
                    ),
                ),
            ],
            options={
                "verbose_name": "Event",
                "verbose_name_plural": "Events",
            },
        ),
        migrations.CreateModel(
            name="Question",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "text",
                    models.TextField(
                        help_text="Текст вопроса", verbose_name="текст вопроса"
                    ),
                ),
                (
                    "image",
                    models.ImageField(
                        help_text="Картинка для вопроса",
                        null=True,
                        upload_to=lessons.utils.path_maker_question,
                        verbose_name="картинка",
                    ),
                ),
            ],
            options={
                "verbose_name": "Question",
                "verbose_name_plural": "Questions",
            },
        ),
    ]
