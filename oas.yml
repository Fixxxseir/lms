openapi: 3.0.3

info:
  title: MOS.METRO.SDO project
  description: Платформа удаленного обучения специалистов дорожных профессий
  version: 0.1.0
  x-speakeasy-retries:
    strategy: backoff
    backoff:
      initialInterval: 500
      maxInterval: 60000
      maxElapsedTime: 3600000
      exponent: 1.5
    statusCodes:
    - 5XX
    retryConnectionErrors: true

servers:
  - url: https://localhost:8000/api/v1
    description: Адресс Производственного сервера

paths:

  /profile:
    get:
      operationId: api_profile_retrieve
      summary: Получение профиля пользователя
      tags:
        - Profile
      security:
        - Token: []
      responses:
        '200':
          description: 'JSON ответ сервера с данным профиля'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
    put:
      operationId: api_profile_update
      summary: Обновление данных о профиле
      tags:
        - Profile
      security:
        - Token: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Profile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Profile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Profile'
        required: true
      responses:
        '200':
          description: 'JSON ответ с подтверждением об Обновлении данных'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'

  /settings/password/change:
    post:
      operationId: api_settings_password
      summary: Поменять пароль, в последствии отправляется уведомление об изменении на почту
      tags:
        - Password
      security:
        - Token: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                old_password:
                  type: string
                  minLength: 8
                  maxLength: 128
                new_password:
                  type: string
                  minLength: 8
                  maxLength: 128
      responses:
        '200':
          description: 'JSON ответ с подтверждением об Обновлении данных'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'

  /login:
    post:
      operationId: api_authemail_login
      summary: Выполнить вход в систему (сохранение токена сессии на данного пользователя)
      tags:
        - Auth
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  maxLength: 255
                password:
                  type: string
                  minLength: 8
                  maxLength: 128
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  maxLength: 255
                password:
                  type: string
                  minLength: 8
                  maxLength: 128
          multipart/form-data:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  maxLength: 255
                password:
                  type: string
                  minLength: 8
                  maxLength: 128
      responses:
        '200':
          description: JSON ответ с токеном
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    format: hex
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'

  /logout:
    get:
      operationId: api_authemail_logout
      summary: Выход из системы (поиск токена данного пользователя и в последствии - удаление)
      tags:
        - Auth
      responses:
        '200':
          description: Выход из системы - успешно
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: string
                    default: User logged out.
        '422':
          $ref: '#/components/responses/UnprocessableEntity'

  /event/{event_id}:
    get:
      operationId: api_events_retrieve
      parameters:
        - in: path
          name: event_id
          required: true
          schema:
            type: integer
      summary: Получение эвента по ID (только для текущего пользователя, в ином случае доступ только администрации или методисту)
      tags:
        - Event
      security:
        - Token: []
      responses:
        '200':
          description: JSON ответ с деталями данного эвента
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/Event'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
    put:
      operationId: api_events_patrial_update
      parameters:
        - in: path
          name: event_id
          required: true
          schema:
            type: integer
      summary: Обновление эвента (для администрации или методиста)
      tags:
        - Event
      security:
        - Token: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              $ref: '#/components/schemas/Event'
      responses:
        '200':
          description: JSON ответ с изменеными данными
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/Event'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
    delete:
      operationId: api_events_destroy
      summary: Удаление эвента (для администрации или методиста (возможно будет реализация только в админ панели))
      parameters:
        - in: path
          name: event_id
          required: true
          schema:
            type: integer
      tags:
        - Event
      security:
        - Token: []
      responses:
        '204':
          description: Эвент удален успешно
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'

  /events/currents:
    get:
      operationId: api_events_get_current
      summary: Получение актуальных эвента назначенных текущему пользователю (по user_id)
      tags:
        - Event
      security:
        - Token: []
      responses:
        '200':
          description: Получение JSON ответа с текущими событиями, курсом, уроками.
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/Event'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'

  /events:
    get:
      operationId: api_events_list
      summary: Получение всех активированных эвентов (для администрации и методиста)
      tags:
        - Event
      security:
        - Token: []
      responses:
        '200':
          description: JSON ответ со списком всех эвентов
          content:
            application/json:
              schema:
                type: array
                minItems: 0
                items:
                  $ref: '#/components/schemas/Event'
        '403':
          $ref: '#/components/responses/Forbidden'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
    post:
      operationId: api_events_create
      summary: Создание Эвента (для администрации или методиста)
      tags:
        - Event
      security:
        - Token: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              $ref: '#/components/schemas/Event'
      responses:
        '201':
          description: JSON ответ с новыми данными
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/Event'
            application/x-www-form-urlencoded:
              schema:
                $ref: '#/components/schemas/Event'
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/Event'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'

  /lessons:
    get:
      operationId: api_lessons_list
      summary: Получение всех уроков (для администрации и методиста)
      tags:
        - Lesson
      security:
        - Token: []
      responses:
        '200':
          description: JSON ответ со списком всех уроков
          content:
            application/json:
              schema:
                type: array
                minItems: 0
                items:
                  $ref: '#/components/schemas/Lesson'
        '403':
          $ref: '#/components/responses/Forbidden'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
    post:
      operationId: api_lessons_create
      summary: Создание новых уроков (для администрации и методиста)
      tags:
        - Lesson
      security:
        - Token: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              $ref: '#/components/schemas/Lesson'
      responses:
        '201':
          description: JSON ответ с новыми данными
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/Lesson'
            application/x-www-form-urlencoded:
              schema:
                $ref: '#/components/schemas/Lesson'
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/Lesson'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'

  /lessons/from-event/{course_id}:
    get:
      operationId: api_lessons_from-event-list
      parameters:
        - in: path
          name: course_id
          required: true
          schema:
            type: integer
      summary: Получение всех уроков эвента по ID (только для текущего пользователя, в ином случае доступ только администрации или методисту)
      tags:
        - Lesson
      security:
        - Token: []
      responses:
        '200':
          description: JSON ответ с массивом уроков данного курса
          content:
            application/json:
              schema:
                type: array
                maxItems: 0
                items:
                  $ref: '#/components/schemas/Lesson'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'

  /lessons/{lesson_id}:
    get:
      summary: Получение конкретного урока по ID
      parameters:
        - in: path
          name: lesson_id
          required: true
          schema:
            type: integer
      operationId: api_lessons_retrieve
      tags:
        - Lesson
      security:
        - Token: []
      responses:
        '200':
          description: JSON ответ с уроком
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/Lesson'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
    put:
      operationId: api_lessons_patrial_update
      parameters:
        - in: path
          name: lesson_id
          required: true
          schema:
            type: integer
      summary: Обновление урока (для администрации или методиста)
      tags:
        - Lesson
      security:
        - Token: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              $ref: '#/components/schemas/Lesson'
      responses:
        '200':
          description: JSON ответ с изменеными данными
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/Lesson'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
    delete:
      operationId: api_lessons_destroy
      summary: Удаление урока (для администрации или методиста (возможно будет реализация только в админ панели))
      parameters:
        - in: path
          name: lesson_id
          required: true
          schema:
            type: integer
      tags:
        - Lesson
      security:
        - Token: []
      responses:
        '204':
          description: Урок удален успешно
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'

  /step:
    get:
      operationId: api_steps_list
      summary: Получение всего списка шагов (для администрации и методиста)
      tags:
        - Step
      security:
        - Token: []
      responses:
        '200':
          description: JSON ответ со списком всех шагов из уроков
          content:
            application/json:
              schema:
                type: array
                minItems: 0
                items:
                  $ref: '#/components/schemas/Step'
        '403':
          $ref: '#/components/responses/Forbidden'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
    post:
      operationId: api_steps_create
      summary: Создание новых шагов (для администрации и методиста)
      tags:
        - Step
      security:
        - Token: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              $ref: '#/components/schemas/Step'
      responses:
        '201':
          description: JSON ответ с новыми данными
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/Step'
            application/x-www-form-urlencoded:
              schema:
                $ref: '#/components/schemas/Step'
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/Step'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'

components:
  responses:
    NotFound:
      description: Ресурс не был найден
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    UnprocessableEntity:
      description: Полезная нагрузка имеет не валидные данные
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Unauthorized:
      description: Пользователь не авторизован или не активный (бан) или логин - пароль не правильный
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    BadRequest:
      description: Произошла ошибка при обработке данных
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Forbidden:
      description: Нет прав доступа
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

  schemas:
    Error:
      type: object
      properties:
        detail:
          oneOf:
            - type: string
            - type: array
      required:
        - detail
      additionalProperties: false

    User:
      description: Сущность учетной записи
      additionalProperties: false
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        first_name:
          type: string
          readOnly: false
          maxLength: 30
          nullable: true
        last_name:
          type: string
          readOnly: false
          maxLength: 30
          nullable: true
        email:
          type: string
          readOnly: false
          nullable: false
          format: email
          maxLength: 255
        password:
          type: string
          format: byte
          nullable: false
          readOnly: false
          minLength: 8
          maxLength: 128
        is_staff:
          type: boolean
          default: false
          readOnly: true
          description: Указатель на права методиста
        is_active:
          type: boolean
          default: true
          readOnly: true
          description: Активность пользователя (возможность пользоваться сервисом)
        date_joined:
          type: string
          format: date-time
          nullable: false
          description: Дата регистрации
        last_login:
          type: string
          format: date-time
          nullable: false
          description: Дата последнего входа
        profession:
          type: object
          $ref: '#/components/schemas/Profession'
        profile:
          type: object
          $ref: '#/components/schemas/Profile'
          readOnly: true
          nullable: true
        date_commencement:
          type: string
          format: date-time
          description: Дата начала работы (исходя из этого вычисляется динамически стаж работы)
          readOnly: true
          nullable: false
      required:
        - id
        - email
        - password
        - profession
        - date_commencement

    Profile:
      description: Сущность профиля
      additionalProperties: false
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: object
          $ref: "#/components/schemas/User"
          readOnly: true
          nullable: false
        phone:
          type: string
          readOnly: false
          nullable: true
          format: phone_number
        image:
          type: string
          readOnly: false
          nullable: true
          format: path
        date_birthday:
          type: string
          readOnly: false
          nullable: true
          format: date
      required:
        - id
        - user

    Сourse:
      description: Сущность курса
      additionalProperties: false
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 256
          readOnly: false
          nullable: false
        description:
          type: string
          readOnly: false
          nullable: true
        lessons:
          type: array
          description: Уроки привязанные к данному курсу (для бэков - это поле только из сериализатора)
          minItems: 1
          items:
            $ref: '#/components/schemas/Lesson'
        create_date:
          type: string
          format: date-time
          readOnly: true
          nullable: false
        update_date:
          type: string
          format: date-time
          readOnly: true
          nullable: false
        image:
          type: string
          format: path
          readOnly: false
          nullable: true
        profession:
          ...
        status:
          type: string
          nullable: false
          enum:
            - expected
            - started
            - closed
        experiences:
          type: array
          description: Список стажевых интервалов для которых подходит данный курс
          minItems: 1
          items:
            $ref: '#/components/schemas/WorkExperience'
      required:
        - id
        - name
        - start_date
        - end_date

    Lesson:
      description: Сущность урока
      additionalProperties: false
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 256
          readOnly: false
          nullable: false
        course:
          type: object
          readOnly: false
          nullable: true
          $ref: '#/components/schemas/Сourse'
        status:
          description: Статус прохождения урока
          nullable: false
          enum:
            - done
            - process
            - failed

    Step:
      description: Шаги урока
      properties:
        title:
          type: string
          maxLength: 256
          readOnly: false
          nullable: false
        content_text:
          type: string
          readOnly: false
          nullable: true
        lesson:
          type: object
          nullable: true
          $ref: '#/components/schemas/Lesson'

    Question:
      description: Сущность тестов для урока
      type: object
      additionalProperties: false
      properties:
        id:
          type: integer
          readOnly: true
        text:
          type: string
          readOnly: false
          nullable: false
        image:
          type: string
          format: path
          description: Изображения для тестового вопроса
          readOnly: false
          nullable: true
        instance:
          type: object
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/Step'
            - $ref: '#/components/schemas/Сourse'
          description: К сущности относится вопрос, если к Step - тогда это обычный вопрос, если к Course - финальный (экзаменационный)

    Answer:
      description: Сущность ответов на тесты
      type: object
      additionalProperties: false
      properties:
        id:
          type: integer
          readOnly: true
        question:
          type: object
          nullable: true
          $ref: '#/components/schemas/Question'
        text:
          type: string
          nullable: false
          readOnly: false
        correct:
          type: boolean
          readOnly: true
      required:
        - question
        - text
        - correct

    ContentAttachment:
      description: Сущность для множественного присвоения мультимедийных файлов к урокам
      additionalProperties: false
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        file:
          type: string
          readOnly: false
          nullable: false
          format: path
        file_type:
          type: string
          readOnly: false
          nullable: false
          enum:
            - Image
            - Video
        step:
          type: object
          $ref: '#/components/schemas/Step'
          nullable: false
      required:
        - file
        - file_type
        - lesson

    ProfessionGroup:
      description: Сущность группы (потока)
      additionalProperties: false
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        profession:
          type: object
          $ref: '#/components/schemas/Profession'
        students:
          type: array
          minItems: 0
          description: Все студенты в группе
          nullable: true
          items:
            $ref: '#/components/schemas/User'

    Profession:
      description: Профессии
      type: object
      properties:
        en_name:
          type: string
          maxLength: 256
          nullable: false
        ru_name:
          type: string
          maxLength: 256
          nullable: false

    WorkExperience:
      description: Стаж работы
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        years:
          type: integer
          minimum: 0
          maximum: 60

    StoryAnswer:
      description: История ответов на вопросы
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: object
          $ref: '#/components/schemas/User'
        question:
          type: object
          $ref: '#/components/schemas/Question'
        answer:
          type: object
          $ref: '#/components/schemas/Answer'

    Event:
      description: Сущность задачи (курс) которая присваивается пользователю
      additionalProperties: false
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: object
          $ref: '#/components/schemas/User'
        course:
          type: object
          $ref: '#/components/schemas/Сourse'
        done_lessons:
          type: integer
          readOnly: true
        start_date:
          type: string
          format: date-time
          readOnly: false
          nullable: true
        end_date:
          type: string
          format: date-time
          readOnly: false
          nullable: true
        status:
          description: Статус прохождения курса
          enum:
            - done
            - process
            - failed

  securitySchemes:
    Token:
      type: apiKey
      in: header
      name: token
